import logging
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import html
from aiogram.client.session.aiohttp import AiohttpSession
from aiogram.client.bot import Bot
from aiogram.client.config import DefaultBotProperties

import os
import asyncio

API_TOKEN = os.getenv('API_TOKEN')  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
LEADERBOARD_URL = 'https://serverflappybobr-production.up.railway.app/api/leaderboard'

if not API_TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω API_TOKEN! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")

logging.basicConfig(level=logging.INFO)

# –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DefaultBotProperties
bot = Bot(
    token=API_TOKEN,
    session=AiohttpSession(),
    default=DefaultBotProperties(parse_mode="HTML")
)

dp = Dispatcher()

@dp.message(Command(commands=["leaderboard", "top"]))
async def send_leaderboard(message: Message):
    response = requests.get(LEADERBOARD_URL)
    
    if response.status_code == 200:
        leaderboard = response.json()
        if not leaderboard:
            await message.reply("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤.")
            return
        
        leaderboard_text = "üèÜ <b>–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:</b>\n\n"
        for entry in leaderboard:
            position = entry.get("position", "N/A")
            user_id = entry.get("user_id", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            username = entry.get("username", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            score = entry.get("score", 0)
            
            if username != "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π":
                leaderboard_text += f'{position}. <a href="tg://user?id={user_id}">{html.escape(username)}</a>: {score}\n'
            else:
                leaderboard_text += f'{position}. {username}: {score}\n'

        await message.reply(leaderboard_text, disable_web_page_preview=True)
    else:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(Command(commands=["start", "help"]))
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /leaderboard –∏–ª–∏ /top, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤.")

async def main():
    dp.include_router(dp)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
